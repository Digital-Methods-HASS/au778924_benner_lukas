1) Use R to figure out how many elements in the vector below are greater than 2.
rooms <- c(1, 5, 2, 3, 1, NA, 3, 1, 3, 2, NA, 1, 8, 3, 1, 4, NA, 1, 3, 1, 2, 1, 7, 1, NA, 4, 3 ,1 ,7 ,2 ,1 ,NA ,1, 1, 3)
13 elements in the vector are greater than 2. Answer found by using the function sum((na.omit(rooms<2))

2) Which function tells you the type of data the 'rooms' vector above contains?
“rooms” contains the type of data, which is called double. This happens when you use the function “typeof()”. But if you use the function “Class()”, we find out that the data is numeric. 

3) What is the result of running the median() function on the above 'rooms' vector?
The median is “N/A” if we use the function “median()”. But if we use the function “median(rooms, na.rm = TRUE)” to remove the N/A, we find out that the median is 2. 

4) In order to submit a screenshot of RStudio, do the following first: Inside your R Project (.Rproj), install the 'tidyverse' package and use the download.file() and read_csv() function to read the SAFI_clean.csv dataset into your R project as 'interviews' digital object (see instructions in https://datacarpentry.org/r-socialsci/setup.html and 'Starting with Data' section). Take a screenshot of your RStudio interface showing
a) the line of code you used to create the object 'interviews', incl. the output in the console,
We used this code:
library(tidyverse)
interviews <- read_csv("SAFI_clean.csv")

5) Challenge: Tidy up your Danish monarchs dataset (you created last week) sufficiently so that you can load it into R as a tibble using the read_csv() and calculate the mean() and median() duration of their rule over time. Remember you can reload the dataset infinitely and tweak the loading as you discover issues :)
This is the R code we used.
library(tidyverse)
na.omit(Danish_kings_1_)
glimpse(Danish_kings_1_)
Danish_kings_1_ <- Danish_kings_1_ %>% 
mutate(start_reign = as.numeric(start_reign),end_reign = as.numeric(end_reign))
Danish_kings_1_ <- Danish_kings_1_ %>%
  mutate(varighed = end_reign - start_reign)
mean(Danish_kings_1_$varighed, na.rm = TRUE)
median(Danish_kings_1_$varighed, na.rm = TRUE)
Mean = 20.15
Median = 17
